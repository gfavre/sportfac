# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-05 16:09
import django.utils.timezone
from django.db import migrations, models

import localflavor.generic.models
import profiles.ahv


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0007_alter_validators_add_error_messages"),
    ]

    operations = [
        migrations.CreateModel(
            name="FamilyUser",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True, max_length=255, unique=True, verbose_name="Email address"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(blank=True, max_length=30, verbose_name="First name"),
                ),
                (
                    "last_name",
                    models.CharField(blank=True, max_length=30, verbose_name="Last name"),
                ),
                ("address", models.TextField(blank=True, verbose_name="Street")),
                ("zipcode", models.CharField(blank=True, max_length=5, verbose_name="NPA")),
                ("city", models.CharField(blank=True, max_length=100, verbose_name="City")),
                (
                    "country",
                    models.CharField(
                        choices=[
                            ("CH", "Switzerland"),
                            ("FL", "Liechtenstein"),
                            ("D", "Germany"),
                            ("F", "France"),
                            ("I", "Italy"),
                            ("A", "Austria"),
                        ],
                        default="CH",
                        max_length=2,
                        verbose_name="Country",
                    ),
                ),
                (
                    "private_phone",
                    models.CharField(blank=True, max_length=30, verbose_name="Home phone"),
                ),
                (
                    "private_phone2",
                    models.CharField(blank=True, max_length=30, verbose_name="Mobile phone"),
                ),
                (
                    "private_phone3",
                    models.CharField(blank=True, max_length=30, verbose_name="Other phone"),
                ),
                ("iban", localflavor.generic.models.IBANField(blank=True, max_length=34)),
                ("birth_date", models.DateField(blank=True, null=True, verbose_name="Birth date")),
                (
                    "ahv",
                    profiles.ahv.AHVField(
                        blank=True,
                        help_text="New AHV number, e.g. 756.1234.5678.90",
                        max_length=16,
                        verbose_name="AHV number",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                    ),
                ),
                ("is_admin", models.BooleanField(default=False)),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "finished_registration",
                    models.BooleanField(
                        default=False,
                        help_text="For current year",
                        verbose_name="Finished registration",
                    ),
                ),
                (
                    "paid",
                    models.BooleanField(
                        default=False, help_text="For current year", verbose_name="Has paid"
                    ),
                ),
                (
                    "billing_identifier",
                    models.CharField(blank=True, max_length=45, verbose_name="Billing identifier"),
                ),
                ("total", models.PositiveIntegerField(default=0, verbose_name="Total to be paid")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "ordering": ("last_name", "first_name"),
                "get_latest_by": "date_joined",
            },
        ),
        migrations.CreateModel(
            name="SchoolYear",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "year",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "1st HARMOS"),
                            (2, "2nd HARMOS"),
                            (3, "3rd HARMOS"),
                            (4, "4th HARMOS"),
                            (5, "5th HARMOS"),
                            (6, "6th HARMOS"),
                            (7, "7th HARMOS"),
                            (8, "8th HARMOS"),
                            (9, "9th HARMOS"),
                            (10, "10th HARMOS"),
                            (11, "11th HARMOS"),
                            (12, "12th HARMOS"),
                        ],
                        unique=True,
                        verbose_name="School year",
                    ),
                ),
            ],
            options={
                "ordering": ("year",),
                "verbose_name": "School year",
                "verbose_name_plural": "School years",
            },
        ),
    ]
